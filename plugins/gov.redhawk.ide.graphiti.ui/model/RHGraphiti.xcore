//
// This file is protected by Copyright.
// Please refer to the COPYRIGHT file distributed with this source distribution.
//
// This file is part of REDHAWK IDE.
//
// All rights reserved.  This program and the accompanying materials are made available under
// the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at
// http://www.eclipse.org/legal/epl-v10.html.
//

@Ecore(nsURI="http://www.redhawk.gov/model/rhgext/1.0.0")
@GenModel(prefix="RHGx", codeFormatting="true")
@GenModel(modelPluginVariables="org.eclipse.xtext.xbase.lib")
@GenModel(contentTypeIdentifier="http://www.redhawk.gov/model/rhgext/1.0.0")
@GenModel(operationReflection="false")
//prevents custom coding from getting blown away
@GenModel(modelDirectory="/gov.redhawk.ide.graphiti.ui/src-model")

package gov.redhawk.ide.graphiti.ext

import org.eclipse.emf.ecore.EEList
import org.eclipse.graphiti.mm.pictograms.ContainerShape
import org.eclipse.graphiti.mm.algorithms.Text
import org.eclipse.graphiti.mm.algorithms.Image
import org.eclipse.graphiti.mm.algorithms.Polyline

annotation "http://www.eclipse.org/emf/2002/GenModel" as GenModel
annotation "http://www.eclipse.org/emf/2002/Ecore" as Ecore
type UsesPortStub wraps mil.jpeojtrs.sca.partitioning.UsesPortStub
type ProvidesPortStub wraps mil.jpeojtrs.sca.partitioning.ProvidesPortStub

class RHContainerShape extends ContainerShape {

	/*If the component is started*/
	transient boolean started

	/*Is the component enabled?*/
	transient boolean enabled = "true"

	/*The severity of the component's status*/
	transient int iStatusSeverity

	/*Flag for whether ports are expanded or not*/
	transient volatile derived boolean collapsed // replaces hasSuperPortsContainerShape and hasPortsContainerShape
	boolean hasSuperPortsContainerShape  //creates a single anchor on each side of container to represent ports
	boolean hasPortsContainerShape //creates a container that displays an anchor per port
	boolean hideUnusedPorts //hides all ports without connection

	op void init()

	/*Returns providesPortsStubs business object list linked to getProvidesPortsContainerShape()*/
	op EEList<ProvidesPortStub> getProvidesPortStubs()

	/*Returns providesPortsStubs business object list linked to getUsesPortsContainerShape()*/
	op EEList<UsesPortStub> getUsesPortStubs()

	/*Updates the shape with supplied values */
	op boolean update()

	/*Return the text for outer container*/
	op Text getOuterText()

	/*Return the image for outer container*/
	op Image getOuterImage()

	/*Return the image for inner container*/
	op Image getInnerImage()

	/*Return the text for inner container*/
	op Text getInnerText()

	/*Return the internal separator line*/
	op Polyline getInnerPolyline()

	/*Return the inner container shape*/
	op ContainerShape getInnerContainerShape()

	/*Return the interface lollipop shape*/
	op ContainerShape getLollipop()

	/*Return the provides ports container*/
	op ContainerShape getProvidesPortsContainerShape()

	/*Return the collapsed provides ports container*/
	op ContainerShape getSuperProvidesPortsContainerShape()

	/*Return to uses ports container*/
	op ContainerShape getUsesPortsContainerShape()

	/*Return the collapsed uses ports container*/
	op ContainerShape getSuperUsesPortsContainerShape()
}
