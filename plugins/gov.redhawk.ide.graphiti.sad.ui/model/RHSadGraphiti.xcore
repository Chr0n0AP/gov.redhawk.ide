
@Ecore(nsURI="http://www.redhawk.gov/model/rhsadgext/1.0.0")
@GenModel(prefix="RHSadGx", codeFormatting="true")
@GenModel(modelPluginVariables="org.eclipse.xtext.xbase.lib")
@GenModel(contentTypeIdentifier="http://www.redhawk.gov/model/rhsadgext/1.0.0")
@GenModel(operationReflection="false")
//prevents custom coding from getting blown away
@GenModel(modelDirectory="/gov.redhawk.ide.graphiti.sad.ui/src-model")

package gov.redhawk.ide.graphiti.sad.ext


annotation "http://www.eclipse.org/emf/2002/GenModel" as GenModel
annotation "http://www.eclipse.org/emf/2002/Ecore" as Ecore

type List<Port> wraps java.util.List

type ComponentPattern wraps gov.redhawk.ide.graphiti.sad.ui.diagram.patterns.ComponentPattern

type ComponentSupportedInterfaceStub wraps mil.jpeojtrs.sca.partitioning.ComponentSupportedInterfaceStub
type UsesPortStub                    wraps mil.jpeojtrs.sca.partitioning.UsesPortStub
type ProvidesPortStub                wraps mil.jpeojtrs.sca.partitioning.ProvidesPortStub
type Port                            wraps mil.jpeojtrs.sca.sad.Port
type AssemblyController              wraps mil.jpeojtrs.sca.sad.AssemblyController
type ExternalPorts                   wraps mil.jpeojtrs.sca.sad.ExternalPorts
type SadComponentInstantiation       wraps mil.jpeojtrs.sca.sad.SadComponentInstantiation

type IAddContext      wraps org.eclipse.graphiti.features.context.IAddContext
type IUpdateContext   wraps org.eclipse.graphiti.features.context.IUpdateContext
type IFeatureProvider wraps org.eclipse.graphiti.features.IFeatureProvider
type Reason           wraps org.eclipse.graphiti.features.impl.Reason

class ComponentShape extends gov.redhawk.ide.graphiti.ext.RHContainerShape{
	
	op void init(IAddContext context, ComponentPattern pattern) 

	/*Updates the shape with supplied values */
	op Reason update(IUpdateContext context, ComponentPattern pattern) 
	
	/*Checks if shape requires an update.  
	 * If update required returns Reason with true
	 * boolean value and message describing what needs to be updated
	 */
	 op Reason updateNeeded(IUpdateContext context, ComponentPattern pattern)
}
